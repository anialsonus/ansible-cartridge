---
variables:
  TEST_IMAGE: registry.gitlab.com/tarantool/enterprise/ansible-cartridge
  BUNDLE_VERSION: 1.10.3-93-g580699f
  CARTRIDGE_CLI_VERSION: 1.2.1
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

stages:
  - prebuild
  - test

cache:
  key: ${CARTRIDGE_CLI_VERSION}-${BUNDLE_VERSION}
  paths:
    - packages/

docker-build-base:
  stage: prebuild
  tags:
    - shell
  only:
    changes:
      - Dockerfile.test
      - .gitlab-ci.yml
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - docker pull ${TEST_IMAGE} || true
    - >
      docker build
      -t ${TEST_IMAGE}
      -f Dockerfile.test
      .
    - docker push ${TEST_IMAGE}
  after_script:
    - docker logout registry.gitlab.com

.test-template: &test-template
  stage: test
  tags:
    - molecule-dind
  image: ${TEST_IMAGE}
  services:
    - name: docker:dind
      alias: localhost
  before_script:
    - docker info
    - python3 --version
    - ansible --version
  script:
    - ./linter.sh

    - cd .. && (rm -rf tarantool-cartridge || true)
    - cp -R ansible-cartridge tarantool-cartridge && cd tarantool-cartridge

    - >
      if [ ! packages/${TARANTOOL_VERSION} ]; then
        TARANTOOL_VERSION=${TARANTOOL_VERSION} ./create-packages.sh
        mkdir -p packages/${TARANTOOL_VERSION}
        cp *.deb *.rpm packages/${TARANTOOL_VERSION}
      else
        cp packages/${TARANTOOL_VERSION}/* .
      fi
    - molecule test

test-enterprise:
  <<: *test-template
  variables:
    TARANTOOL_VERSION: enterprise

test-opensource-1.10:
  <<: *test-template
  variables:
    TARANTOOL_VERSION: opensource-1.10

test-opensource-2.2:
  <<: *test-template
  variables:
    TARANTOOL_VERSION: opensource-2.2
